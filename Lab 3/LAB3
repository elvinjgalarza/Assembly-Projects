
.ORIG x3000

	AND R0, R0, #0
	AND R1, R1, #0
	AND R2, R2, #0
	AND R3, R3, #0
	AND R4, R4, #0
	AND R5, R5, #0
	AND R6, R6, #0
	AND R7, R7, #0

;USER INPUT CODE BEGIN HERE

BEG	ADD R1, R1, #5		;R1 becomes counter for char input
	LEA R2, A		;R2 gets address of stored chars
INPUT	GETC
	OUT
	ADD R2, R2, #1
	
A	.BLKW 5			;Characters stored here			
	STR R0, R2, #0
	ADD R1, R1, #-1
	BRp INPUT
	
;LISTS BEGIN HERE 
	
EE306	LD R0, EE306NODE	;R0 is EE306 pointer
	;BRz UT			;END of EE306 list
L1	LDR R0, R0, #0		;gets next node 
	;BRz UT			;END of EE306 list

	ADD R1, R0, #2		;R1 is EE306ID pointer
	LD  R3, ID		;R3 is USERID pointer
	AND R6, R6, #0		;Clear counter
	ADD R6, R6, #5		;R6 is counter

EE306L1	LDR R2, R1, #0		;R2 now has EE306ID char
	LDR R4, R3, #0		;R4 has USERID char
	
	
	
	NOT R2, R2
	ADD R2, R2, #1
	ADD R5, R2, R4		;R5 is checker
	BRz EQUAL		;equal, so continue checking other IDs
	

				;if not equal falls to this (increments counter for next node)
	ADD R0, R0, #1
	AND R1, R1, #0
	AND R2, R2, #0
	AND R3, R3, #0
	AND R4, R4, #0
	AND R5, R5, #0
	AND R6, R6, #0
	BRnzp L1		
	

EQUAL   ADD R1, R1, #1		;increment counters
	ADD R3, R3, #1		
	ADD R6, R6, #-1
	BRp EE306L1

	
	LEA R0, M1		;output "Student is already enrolled in 306"	
	PUTS
	AND R0, R0, #0
	AND R1, R1, #0
	AND R2, R2, #0
	AND R3, R3, #0
	AND R4, R4, #0
	AND R5, R5, #0
	AND R6, R6, #0
	BRnzp BEG		;RESTART

	
	HALT

EE306NODE	.FILL x3800
ID		.FILL x300E
M1		.STRINGZ "\nStudent is already enrolled in 306\n"
M2		.STRINGZ "\nSuccessfully enrolled student in 306\n"
M3		.STRINGZ "\nCannot find student\n"
		.END
